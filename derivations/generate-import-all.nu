# Nushell script to find all ".nix" files in a given folder and its subdirectories,
# and create an 'import-all.nix' file in that folder to import them.
# The generated import uses the format `{ imports = [ relative-path-1 relative-path-2 ]; }`.
def main [target_folder: path] {
    if not (($target_folder | path type) == "dir") {
        error "Error: '$target_folder' is not a directory."
        return
    }

    let absolute_target_folder: path = ($target_folder | path expand)

    let nix_files: list<string> = (
        ls ...(glob $"($absolute_target_folder)/**/*.{nix}")
        | where {|file| ($file.name | path basename) != 'import-all.nix'} # Exclude import-all.nix
        | get name
    )

    let import_entries = ($nix_files
        | each { |file_path|
            let relative_path = ($file_path | path relative-to $absolute_target_folder)
            $"  ./($relative_path)"
        }
    )

    let imports_list_content = ($import_entries | str join "\n")

    let import_all_nix_content = $"
      # This file was generated by 'generate-import-all'.
      { imports = [\n($imports_list_content)\n]; }
    "

    let output_file_path = ($absolute_target_folder | path join "import-all.nix")

    $import_all_nix_content | save --force $output_file_path

    print $"Successfully created 'import-all.nix' in '($absolute_target_folder)'."
}
