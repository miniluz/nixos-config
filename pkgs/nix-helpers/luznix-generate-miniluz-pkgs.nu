# Nushell script to find all ".nix" files in a given folder and its subdirectories,
# and create an 'import-all.nix' file in that folder to import them.
# The generated import uses the format `{ imports = [ relative-path-1 relative-path-2 ]; }`.
def main [target_folder: path] {
    if not (($target_folder | path type) == "dir") {
        error $"Error: '($target_folder)' is not a directory."
        return
    }

    let absolute_target_folder: path = ($target_folder | path expand)

    let nix_files: list<string> = (
        ls ...(glob $"($absolute_target_folder)/**/*.{nix}")
        | where {|file| ($file.name | path basename) != 'miniluz-pkgs.nix'} # Exclude import-all.nix
        | get name
    )

    let pkgs_entries = ($nix_files
        | each { |file_path|
            let relative_path = ($file_path | path relative-to $absolute_target_folder)
            let stem = ($relative_path | path parse).stem
            $"  ($stem) = import ./($relative_path) attrs;"
        }
    )

    let pkgs_content = ($pkgs_entries | str join "\n")

    let pkgs_file = $"
      # This file was generated by 'luznix-generate-miniluz-pkgs'.
      attrs:
      {
        ($pkgs_content)
      }
    "

    let output_file_path = ($absolute_target_folder | path join "miniluz-pkgs.nix")

    $pkgs_file | save --force $output_file_path

    print $"Successfully created 'miniluz-pkgs.nix' in '($absolute_target_folder)'."
}
